/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class es_udc_gac_jhwloc_HwlocBitmap */

#ifndef _Included_es_udc_gac_jhwloc_HwlocBitmap
#define _Included_es_udc_gac_jhwloc_HwlocBitmap
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_alloc
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1alloc
  (JNIEnv *, jclass);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_alloc_full
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1alloc_1full
  (JNIEnv *, jclass);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_free
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1free
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_dup
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1dup
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_copy
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1copy
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_or
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1or
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_and
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1and
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_andnot
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1andnot
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_xor
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1xor
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_not
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1not
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_singlify
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1singlify
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_intersects
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1intersects
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_isincluded
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1isincluded
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_isequal
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1isequal
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_compare
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1compare
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_compare_first
 * Signature: (Les/udc/gac/jhwloc/HwlocBitmap;)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1compare_1first
  (JNIEnv *, jobject, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_zero
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1zero
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_fill
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1fill
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_isset
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1isset
  (JNIEnv *, jobject, jint);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_iszero
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1iszero
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_isfull
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1isfull
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_asprintf
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1asprintf
  (JNIEnv *, jobject);

/*
 * Class:     es_udc_gac_jhwloc_HwlocBitmap
 * Method:    jhwloc_bitmap_list_asprintf
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_es_udc_gac_jhwloc_HwlocBitmap_jhwloc_1bitmap_1list_1asprintf
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
